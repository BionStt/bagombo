
@{
  ViewData["Title"] = "Bagombo Home";
  Layout = "_Layout";

  var host = Context.Request.Scheme + "://" + Context.Request.Host;
}

@using Bagombo.Models.ViewModels.Home
@using Microsoft.Extensions.Options
@using CommonMark

@model HomeViewModel

@inject IOptions<BagomboSettings> _settings

@section opengraph {

<meta property="og:type" content="article" />
<meta property="og:url" content="@host@Context.Request.Path" />
<meta property="og:title" content="@_settings.Value.HomePageTitle" />
<meta property="og:description" content="@_settings.Value.Description" />
<meta property="og:url" content="@(host + Context.Request.Path)" />
<meta property="og:image" content="@host/images/bagombo-logo.png" />
<meta property="og:image:width" content="256" />
<meta property="og:image:height" content="256" />
 
<meta property="twitter:url" content="@host@Context.Request.Path" />
<meta property="twitter:title" content="@_settings.Value.HomePageTitle" />
<meta property="twitter:description" content="@_settings.Value.Description" />

}

<div class="container">
    @if (Model.RecentPosts.PageIndex == 1)
    {
      <div class="row mb-2">
          <div class="col-md-12 mb-0 pb-0">
              <div class="jumbotron mb-2 pt-5 pb-5">
                  <h4><strong>Bagombo Blog Engine (alpha release)</strong></h4>
                <div class="container p-0">
                  <div class="row">
                    <div class="col-md-9">
                      <p>
                        The Bagombo Blog Engine is a free ASP.NET Core based blogging engine with support for multiple authors and editing in Markdown.
                      
                      </p>
                    </div>
                    <div class="col-md-3">
                      <a class="btn btn-primary btn-lg" href="https://github.com/tylerlrhodes/bagombo/releases" role="button">Download 0.2.4a</a>
                    </div>
                  </div>
                </div>
              </div>
          </div>
      </div>
    }
    <div class="row mt-0">
      <div class="col-md-12 mt-0">
        @foreach (var bp in Model.RecentPosts)
        {
          <div class="card mb-3">
            <div class="card-header">
              <a asp-action="BlogPost" asp-route-id="@bp.Id">@bp.Title</a> by @bp.Author.FirstName @bp.Author.LastName on @bp.PublishOn
              @if (bp.Comments != null)
              {
                <div class="float-right">@bp.Comments?.Count() Comments</div>
              }
            </div>
            <div class="card-body pl-0">
              <div class="container">
                <div class="row">
                  <div class="col-lg-1 col-12">
                    @{ 
                      var img = bp.Image ?? $"{host}/images/bagombo-logo.png";
                    }
                    <img height="100" width="100" src="@img" />
                  </div>
                  <div class="col-lg-11 col-12 pl-4">
                    @{
                      var content = bp.Content.Split('\n')
                        .Where(line => !line.Contains("<pre><code"))
                        .Where(line => !line.Contains("</code></pre>"))
                        .Take(_settings.Value.LinesPerPost);
                      var contentString = string.Join('\n', content);
                    }
                    @Html.Raw(CommonMarkConverter.Convert(contentString))
                    <div class="float-right"> 
                      <a asp-action="BlogPost" asp-route-id="@bp.Id">Read more</a>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        }
      </div>
    </div>
    <div class="row">
      <div class="col-md-12">
        @{
          var hasPrevious = Model.RecentPosts.HasPreviousPage ? "" : "disabled";
          var hasNext = Model.RecentPosts.HasNextPage ? "" : "disabled";
        }
        <div class="float-right">
          <ul class="pagination text">
            <li class="page-item @hasPrevious"><a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.RecentPosts.PageIndex - 1)">Previous</a></li>
            <li class="page-item @hasNext"><a class="page-link" asp-controller="Home" asp-action="Index" asp-route-page="@(Model.RecentPosts.PageIndex + 1)">Next</a></li>
          </ul>
        </div>
      </div>
    </div>

</div>